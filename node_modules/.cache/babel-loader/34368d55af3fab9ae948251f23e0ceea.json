{"ast":null,"code":"var _jsxFileName = \"/Users/forum/WebstormProjects/weatherApp/src/weathergridList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  };\n};\n\nfunction SingleLineGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 2.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"hello\"));\n}\n\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SingleLineGridList);","map":{"version":3,"sources":["/Users/forum/WebstormProjects/weatherApp/src/weathergridList.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","styles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","SingleLineGridList","props","classes","propTypes","object","isRequired"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,QAAQ,EAAE,MAFR;AAGFC,MAAAA,cAAc,EAAE,cAHd;AAIFC,MAAAA,QAAQ,EAAE,QAJR;AAKFC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC,KADe;AAQrBC,IAAAA,QAAQ,EAAE;AACNP,MAAAA,QAAQ,EAAE,QADJ;AAEN;AACAQ,MAAAA,SAAS,EAAE;AAHL,KARW;AAarBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AAD1B,KAbc;AAgBrBC,IAAAA,QAAQ,EAAE;AACNR,MAAAA,UAAU,EACN;AAFE;AAhBW,GAAL;AAAA,CAApB;;AAsBA,SAASS,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,MACvBC,OADuB,GACXD,KADW,CACvBC,OADuB;AAG/B,SACI;AAAK,IAAA,SAAS,EAAEA,OAAO,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEkB,OAAO,CAACT,QAA7B;AAAuC,IAAA,IAAI,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAwBH;;AAEDO,kBAAkB,CAACG,SAAnB,GAA+B;AAC3BD,EAAAA,OAAO,EAAE5B,SAAS,CAAC8B,MAAV,CAAiBC;AADC,CAA/B;AAIA,eAAe9B,UAAU,CAACO,MAAD,CAAV,CAAmBkB,kBAAnB,CAAf","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n});\n\nfunction SingleLineGridList(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={2.5}>\nhello\n                {/*{tileData.map(tile => (*/}\n                {/*    <GridListTile key={tile.img}>*/}\n                {/*        <img src={tile.img} alt={tile.title} />*/}\n                {/*        <GridListTileBar*/}\n                {/*            title={tile.title}*/}\n                {/*            classes={{*/}\n                {/*                root: classes.titleBar,*/}\n                {/*                title: classes.title,*/}\n                {/*            }}*/}\n                {/*            actionIcon={*/}\n                {/*                <IconButton>*/}\n                {/*                    <StarBorderIcon className={classes.title} />*/}\n                {/*                </IconButton>*/}\n                {/*            }*/}\n                {/*        />*/}\n                {/*    </GridListTile>*/}\n                {/*))}*/}\n            </GridList>\n        </div>\n    );\n}\n\nSingleLineGridList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SingleLineGridList);"]},"metadata":{},"sourceType":"module"}