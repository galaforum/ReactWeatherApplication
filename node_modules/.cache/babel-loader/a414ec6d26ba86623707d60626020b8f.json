{"ast":null,"code":"var _jsxFileName = \"/Users/forum/WebstormProjects/weatherApp/src/weathergridList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flex: 1,\n      borderWidth: 1,\n      flexDirection: 'row',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    } // titleBar: {\n    //     background:\n    //         'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    // },\n\n  };\n};\n\nfunction SingleLineGridList(props) {\n  var classes = props.classes;\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    className: classes.gridList,\n    cols: 2.5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, tileData.map(function (tile) {\n    return React.createElement(GridListTile, {\n      key: tile.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      className: classes.root,\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0V0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      d: \"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79zM1 10.5h3v2H1zM11 .55h2V3.5h-2zm8.04 2.495l1.408 1.407-1.79 1.79-1.407-1.408zm-1.8 15.115l1.79 1.8 1.41-1.41-1.8-1.79zM20 10.5h3v2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm-1 4h2v2.95h-2zm-7.45-.96l1.41 1.41 1.79-1.8-1.41-1.41z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(GridListTileBar, {\n      title: tile.title,\n      classes: {\n        root: classes.homeLayout,\n        title: classes.title\n      },\n      actionIcon: React.createElement(IconButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(StarBorderIcon, {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  })));\n}\n\nSingleLineGridList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SingleLineGridList);","map":{"version":3,"sources":["/Users/forum/WebstormProjects/weatherApp/src/weathergridList.js"],"names":["React","PropTypes","withStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","tileData","styles","theme","root","flex","borderWidth","flexDirection","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","flexWrap","transform","title","color","primary","light","SingleLineGridList","props","classes","map","tile","key","homeLayout","propTypes","object","isRequired"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAE,CADJ;AAEFC,MAAAA,WAAW,EAAE,CAFX;AAGFC,MAAAA,aAAa,EAAE,KAHb;AAIFC,MAAAA,cAAc,EAAE,cAJd;AAKFC,MAAAA,QAAQ,EAAE,QALR;AAMFC,MAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,UAAd,CAAyBC;AANxC,KADe;AASrBC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,QADJ;AAEN;AACAC,MAAAA,SAAS,EAAE;AAHL,KATW;AAcrBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEf,KAAK,CAACQ,OAAN,CAAcQ,OAAd,CAAsBC;AAD1B,KAdc,CAiBrB;AACA;AACA;AACA;;AApBqB,GAAL;AAAA,CAApB;;AAuBA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,MACvBC,OADuB,GACXD,KADW,CACvBC,OADuB;AAG/B,SACI;AAAK,IAAA,SAAS,EAAEA,OAAO,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEmB,OAAO,CAACT,QAA7B;AAAuC,IAAA,IAAI,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,QAAQ,CAACuB,GAAT,CAAa,UAAAC,IAAI;AAAA,WACd,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEH,OAAO,CAACnB,IAAxB;AAA8B,MAAA,KAAK,EAAC,4BAApC;AAAiE,MAAA,OAAO,EAAC,WAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqF;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArF,EAA4H;AAAM,MAAA,CAAC,EAAC,6VAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5H,CADJ,EAEI,oBAAC,eAAD;AACI,MAAA,KAAK,EAAEqB,IAAI,CAACR,KADhB;AAEI,MAAA,OAAO,EAAE;AACLb,QAAAA,IAAI,EAAEmB,OAAO,CAACI,UADT;AAELV,QAAAA,KAAK,EAAEM,OAAO,CAACN;AAFV,OAFb;AAMI,MAAA,UAAU,EACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAgB,QAAA,SAAS,EAAEM,OAAO,CAACN,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADc;AAAA,GAAjB,CADL,CADJ,CADJ;AAuBH;;AAEDI,kBAAkB,CAACO,SAAnB,GAA+B;AAC3BL,EAAAA,OAAO,EAAE7B,SAAS,CAACmC,MAAV,CAAiBC;AADC,CAA/B;AAIA,eAAenC,UAAU,CAACO,MAAD,CAAV,CAAmBmB,kBAAnB,CAAf","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport tileData from './tileData';\n\nconst styles = theme => ({\n    root: {\n        flex: 1,\n        borderWidth: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    // titleBar: {\n    //     background:\n    //         'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    // },\n});\n\nfunction SingleLineGridList(props) {\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={2.5}>\n                {tileData.map(tile => (\n                    <GridListTile key={tile.key}>\n                        <svg className={classes.root} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M6.76 4.84l-1.8-1.79-1.41 1.41 1.79 1.79zM1 10.5h3v2H1zM11 .55h2V3.5h-2zm8.04 2.495l1.408 1.407-1.79 1.79-1.407-1.408zm-1.8 15.115l1.79 1.8 1.41-1.41-1.8-1.79zM20 10.5h3v2h-3zm-8-5c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6-2.69-6-6-6zm0 10c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm-1 4h2v2.95h-2zm-7.45-.96l1.41 1.41 1.79-1.8-1.41-1.41z\"/></svg>\n                        <GridListTileBar\n                            title={tile.title}\n                            classes={{\n                                root: classes.homeLayout,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton>\n                                    <StarBorderIcon className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nSingleLineGridList.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SingleLineGridList);"]},"metadata":{},"sourceType":"module"}